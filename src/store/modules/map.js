import Repository from 'src/api/repository';

const state = {
    reguts: [
        {
          time: '2012-09-11T20:00',
          cords: [[59.94379302595285,30.30965359487853], [59.9520890481481,30.277045057585894], [59.96000931813493,30.240652845671818],
                 [59.97205825893221,30.140754229653542], [59.98857537087425,29.990378863442594], [60.00989773874338,29.832450396645722],
                 [60.043916165075416,29.70954085074728], [60.04151197614466,29.601050860512906], [59.99055328494795,29.635040157503912],
                 [59.942329577267174,29.832643756331546], [59.928546599542116,30.00979829734719], [59.91723873415458,30.191830313646953],
                 [59.917583496509366,30.260494864428193], [59.9324048788073,30.278347647631314], [59.94379302595285,30.30965359487853]],
        },
        {
          time: '2012-02-26T13:00'
        }
    ],

    fakeBoatCoards: [
            [59.94376383226636,30.30572504023785], [59.94632724971753,30.302357043590195], [59.94649947973294,30.29634889539684],
            [59.94774710243835,30.286875766420916], [59.95134366705953,30.279337760373068], [59.95361989983983,30.270722534059207],
            [59.95749401300904,30.26033700019046], [59.95915112934714,30.247977381049857], [59.961895583353154,30.23574272968574],
            [59.964111931245526,30.22484223224923], [59.96462983913819,30.20413595229506], [59.96691470110622,30.13709053149237],
            [59.97414308128314,30.071859208250185], [59.974831415888126,30.01486763110174], [59.98928312655485,29.98053535571112],
            [60.00150648598009,29.893912922593593], [60.016290246279084,29.853400837632645], [60.01147765704191,29.800529133531093],
            [60.027631425753476,29.78130305931235], [60.04343382843434,29.728431355210773], [60.039056791546855,29.681457592823712],
            [60.04111768938726,29.628585888722156], [60.03390398239316,29.614852978565906], [60.019471825524306,29.615539624073715],
            [60.008815462000165,29.646438671925278], [59.99334041388665,29.662918164112778], [59.97510492851996,29.677337719776844],
            [59.96916050952685,29.710596013181593], [59.95252693915165,29.77914944927887], [59.95080491281141,29.82103482525544],
            [59.94322693037678,29.86360684673982], [59.93264401672675,29.93600031787983], [59.938169221950844,29.98683302451077],
            [59.92714191151058,30.032838273534207], [59.918869014477686,30.078843522557644], [59.91748999709358,30.120728898534214],
            [59.91748999709358,30.192673652040824], [59.919213759840524,30.224259345400196], [59.91760832611859,30.250108057059986],
            [59.91812546252507,30.263669305839294], [59.924292375155254,30.270986733944728], [59.929768107320314,30.27270334771427],
            [59.934221391935196,30.27954936989105], [59.93540306907623,30.290279996022434], [59.938190263515565,30.299471100899705],
            [59.94217793527044,30.309930175234797], [59.94437407648254,30.309286445071223], 
            [59.94376383226636,30.30572504023785], [59.94632724971753,30.302357043590195], [59.94649947973294,30.29634889539684],
            [59.94774710243835,30.286875766420916], [59.95134366705953,30.279337760373068], [59.95361989983983,30.270722534059207],
            [59.95749401300904,30.26033700019046], [59.95915112934714,30.247977381049857], [59.961895583353154,30.23574272968574],
            [59.964111931245526,30.22484223224923], [59.96462983913819,30.20413595229506], [59.96691470110622,30.13709053149237],
            [59.97414308128314,30.071859208250185], [59.974831415888126,30.01486763110174], [59.98928312655485,29.98053535571112],
            [60.00150648598009,29.893912922593593], [60.016290246279084,29.853400837632645], [60.01147765704191,29.800529133531093],
            [60.027631425753476,29.78130305931235], [60.04343382843434,29.728431355210773], [60.039056791546855,29.681457592823712],
            [60.04111768938726,29.628585888722156], [60.03390398239316,29.614852978565906], [60.019471825524306,29.615539624073715],
            [60.008815462000165,29.646438671925278], [59.99334041388665,29.662918164112778], [59.97510492851996,29.677337719776844],
            [59.96916050952685,29.710596013181593], [59.95252693915165,29.77914944927887], [59.95080491281141,29.82103482525544],
            [59.94322693037678,29.86360684673982], [59.93264401672675,29.93600031787983], [59.938169221950844,29.98683302451077],
            [59.92714191151058,30.032838273534207], [59.918869014477686,30.078843522557644], [59.91748999709358,30.120728898534214],
            [59.91748999709358,30.192673652040824], [59.919213759840524,30.224259345400196], [59.91760832611859,30.250108057059986],
            [59.91812546252507,30.263669305839294], [59.924292375155254,30.270986733944728], [59.929768107320314,30.27270334771427],
            [59.934221391935196,30.27954936989105], [59.93540306907623,30.290279996022434], [59.938190263515565,30.299471100899705],
            [59.94217793527044,30.309930175234797], [59.94437407648254,30.309286445071223],
          ],

    boats: [
        {
          id: 1,
          cords: [[59.94376383226636,30.30572504023785], [59.95857348144599,30.251480045120672], [59.970278736782134,30.184188785355055],
                [59.968557635962966,30.084625186722228], [59.9811994625523,29.970605237525266], [60.00710605716098,29.823865914317228],
                [60.04627904421609,29.735288643809408], [60.04162334293775,29.637076745481284], [60.019337199177,29.60717715617732],
                [59.970151497419906,29.666523264032556], [59.95678892539621,29.754653091235213]
            ],
          racetrackCount: 3,  
          updated: true,
        },
        {
          id: 2,
          cords: [[59.94376383226636,30.30572504023785], [59.95857348144599,30.251480045120672], [59.970278736782134,30.184188785355055], 
                [59.96550981578456,30.001315215995007]
            ],
          racetrackCount: 2, 
          updated: true,
        },
        {
          id: 3,
          cords: [[59.94376383226636,30.30572504023785], [59.95857348144599,30.251480045120672], [59.970278736782134,30.184188785355055], 
          [59.977193674248944,30.015199271268912]
          ],
          racetrackCount: 1, 
          updated: true,
        },
        {
          id: 4,
          cords: [[59.94376383226636,30.30572504023785], [59.95857348144599,30.251480045120672], [59.970278736782134,30.184188785355055],
                [60.01598089395001,29.908981170749694]
            ],
          racetrackCount: 4, 
          updated: true,
        },
        {
            id: 5,
            cords: [
                  [59.94376383226636,30.30572504023785], [59.95857348144599,30.251480045120672], [59.970278736782134,30.184188785355055],
                  [59.968557635962966,30.084625186722228], [59.9811994625523,29.970605237525266], [60.00710605716098,29.823865914317228],
                  [60.04627904421609,29.735288643809408], [60.04162334293775,29.637076745481284], [60.019337199177,29.60717715617732],
                  [59.970151497419906,29.666523264032556], [59.93869566163937,29.973693782995277], [59.92353240288514,30.149475032995294],
                  [59.9187062710321,30.241485531042173], [59.9176720082952,30.264831478307787], [59.933093303477996,30.275937773581802],
                  [59.93860642596479,30.300313689109146], [59.941615042559484,30.308167635985242],
                ],

            racetrackCount: 3, 
            updated: true,
        },
        {
            id: 6,
            cords: [
                [59.94376383226636,30.30572504023785],
              ],
            racetrackCount: 3, 
            updated: true,
          },
      ],
};

const getters = {
    boats(state) {
        return state.boats;
    },
    reguts(state) {
        return state.reguts;
    }
};

const mutations = {
    setBoats (state, boats) {
        state.boats = boats;
    },

    pushToBoat(state, cord) {
        state.boats[5].cords.push(cord);
    },

    setRegats (state, reguts) {
        state.reguts = reguts;
    },

    countBoatRace (state, boatId) {
        state.boats.filter(boat => boat.id == boatId)[0].racetrackCount += 1;
    },

    makeUpdatedTrue(state, boatId) {
        state.boats.filter(boat => boat.id == boatId)[0].updated = true;
    },
    makeUpdatedFalse(state, boatId) {
        state.boats.filter(boat => boat.id == boatId)[0].updated = false;
    },

    updateRaceCords(state, boatId) {
        let currentCords = state.boats.filter(boat => boat.id == boatId)[0].cords;
        currentCords.splice(0, currentCords.length - 1);
    },
};

const actions = {

    async setBoatsRequest(context) {
        const req = await Repository.get('boats');
        context.commit('setBoats', req.data);
    },

    async getRegat(context) {
        const req = await Repository.get('regutsTIME');
        context.commit('setRegats', req.data);
    },

    async pushToBoatAct(context) {

          for (let index = 0; index < state.fakeBoatCoards.length; index++) {

            let promise = new Promise((resolve) => {
                setTimeout(() => resolve(state.fakeBoatCoards[index]), 1000)
              });
            
            let result = await promise; 
    
            context.commit('pushToBoat', result);
            
            
        }
        
    } 
};

export default {
    state,
    getters,
    actions,
    mutations,
}